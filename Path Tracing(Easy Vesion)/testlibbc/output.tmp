onCross[-16, -3] [0, 1]
-16 0
onCross[-4, 2] [12, 6]
-24 24
onCross[4, -2] [16, 3]
12 -32
onCross[4, -2] [16, 3]
12 -32
m0:[[19, 13],[3, 9]]
m1:[[19, 12],[7, 7]]
m2:[[13, 19],[16, 17]]
-> 计算可行域 <-
onCross[-1988, 1006] [-1988, 1005]
-1997940 -1999928
onCross[0, 1] [-12, -5]
0 -12
onCross[-12, -5] [1988, -1005]
12060 -9940
onCross[-2000, 1000] [-1988, 1006]
-2012000 -1988000
onCross[-12, -5] [0, 1]
-12 0
onCross[1988, -1005] [0, 1]
1988 0
onCross[-1988, 1006] [-2000, 1000]
-1988000 -2012000
onCross[-1988, 1005] [-2000, 1000]
-1988000 -2010000
onCross[-2000, -374] [-2012, -380]
760000 752488
onCross[12, 6] [12, 5]
60 72
onCross[12, 5] [12, 6]
72 60
onCross[2012, 380] [12, 6]
12072 4560
onCross[-2000, -374] [-2000, -375]
750000 748000
onCross[-2012, -380] [-2000, -375]
754500 760000
Common for m1[[19, 12],[7, 7]]
for getConvex:[[19, 13],[7, 7]] [[3, 9],[19, 12]]

exted:[[7, 7],[-1993, -993]] [[19, 12],[2019, 387]]

onIfAvil:[[7, 7],[-1993, -993]] [[19, 12],[2019, 387]] on [241, 241]
check Inside[[7, 7],[-1993, -993]] [[7, 7],[19, 12]] [241, 241]
on Left for dot[19, 12] vec [[7, 7],[-1993, -993]]
[-2000, -1000] [12, 5]
onCross[-2000, -1000] [12, 5]
-10000 -12000
2000
onCross[-2000, -1000] [12, 5]
-10000 -12000
2000
onCross[-2000, -1000] [12, 5]
-10000 -12000
on Left for dot[241, 241] vec [[7, 7],[-1993, -993]]
[-2000, -1000] [234, 234]
onCross[-2000, -1000] [234, 234]
-468000 -234000
-234000
onCross[-2000, -1000] [234, 234]
-468000 -234000
-234000
onCross[-2000, -1000] [234, 234]
-468000 -234000
check Inside Finished:0
0===
check Inside[[19, 12],[2019, 387]] [[19, 12],[7, 7]] [241, 241]
on Left for dot[7, 7] vec [[19, 12],[2019, 387]]
[2000, 375] [-12, -5]
onCross[2000, 375] [-12, -5]
-10000 -4500
-5500
onCross[2000, 375] [-12, -5]
-10000 -4500
-5500
onCross[2000, 375] [-12, -5]
-10000 -4500
on Left for dot[241, 241] vec [[19, 12],[7, 7]]
[-12, -5] [222, 229]
onCross[-12, -5] [222, 229]
-2748 -1110
-1638
onCross[-12, -5] [222, 229]
-2748 -1110
-1638
onCross[-12, -5] [222, 229]
-2748 -1110
check Inside Finished:0
0===
onCross[-2012, -1005] [-12, -5]
10060 12060
onCross[222, 229] [-12, -5]
-1110 -2748
0===
check Inside[[7, 7],[-1993, -993]] [[7, 7],[19, 12]] [241, 241]
on Left for dot[19, 12] vec [[7, 7],[-1993, -993]]
[-2000, -1000] [12, 5]
onCross[-2000, -1000] [12, 5]
-10000 -12000
2000
onCross[-2000, -1000] [12, 5]
-10000 -12000
2000
onCross[-2000, -1000] [12, 5]
-10000 -12000
on Left for dot[241, 241] vec [[7, 7],[-1993, -993]]
[-2000, -1000] [234, 234]
onCross[-2000, -1000] [234, 234]
-468000 -234000
-234000
onCross[-2000, -1000] [234, 234]
-468000 -234000
-234000
onCross[-2000, -1000] [234, 234]
-468000 -234000
check Inside Finished:0
onIfAvil:[[7, 7],[-1993, -993]] [[19, 12],[2019, 387]] on [-241, 241]
check Inside[[7, 7],[-1993, -993]] [[7, 7],[19, 12]] [-241, 241]
on Left for dot[19, 12] vec [[7, 7],[-1993, -993]]
[-2000, -1000] [12, 5]
onCross[-2000, -1000] [12, 5]
-10000 -12000
2000
onCross[-2000, -1000] [12, 5]
-10000 -12000
2000
onCross[-2000, -1000] [12, 5]
-10000 -12000
on Left for dot[-241, 241] vec [[7, 7],[-1993, -993]]
[-2000, -1000] [-248, 234]
onCross[-2000, -1000] [-248, 234]
-468000 248000
-716000
onCross[-2000, -1000] [-248, 234]
-468000 248000
-716000
onCross[-2000, -1000] [-248, 234]
-468000 248000
check Inside Finished:0
0===
check Inside[[19, 12],[2019, 387]] [[19, 12],[7, 7]] [-241, 241]
on Left for dot[7, 7] vec [[19, 12],[2019, 387]]
[2000, 375] [-12, -5]
onCross[2000, 375] [-12, -5]
-10000 -4500
-5500
onCross[2000, 375] [-12, -5]
-10000 -4500
-5500
onCross[2000, 375] [-12, -5]
-10000 -4500
on Left for dot[-241, 241] vec [[19, 12],[7, 7]]
[-12, -5] [-260, 229]
onCross[-12, -5] [-260, 229]
-2748 1300
-4048
onCross[-12, -5] [-260, 229]
-2748 1300
-4048
onCross[-12, -5] [-260, 229]
-2748 1300
check Inside Finished:0
0===
onCross[-2012, -1005] [-12, -5]
10060 12060
onCross[-260, 229] [-12, -5]
1300 -2748
0===
check Inside[[7, 7],[-1993, -993]] [[7, 7],[19, 12]] [-241, 241]
on Left for dot[19, 12] vec [[7, 7],[-1993, -993]]
[-2000, -1000] [12, 5]
onCross[-2000, -1000] [12, 5]
-10000 -12000
2000
onCross[-2000, -1000] [12, 5]
-10000 -12000
2000
onCross[-2000, -1000] [12, 5]
-10000 -12000
on Left for dot[-241, 241] vec [[7, 7],[-1993, -993]]
[-2000, -1000] [-248, 234]
onCross[-2000, -1000] [-248, 234]
-468000 248000
-716000
onCross[-2000, -1000] [-248, 234]
-468000 248000
-716000
onCross[-2000, -1000] [-248, 234]
-468000 248000
check Inside Finished:0
onIfAvil:[[7, 7],[-1993, -993]] [[19, 12],[2019, 387]] on [241, -241]
check Inside[[7, 7],[-1993, -993]] [[7, 7],[19, 12]] [241, -241]
on Left for dot[19, 12] vec [[7, 7],[-1993, -993]]
[-2000, -1000] [12, 5]
onCross[-2000, -1000] [12, 5]
-10000 -12000
2000
onCross[-2000, -1000] [12, 5]
-10000 -12000
2000
onCross[-2000, -1000] [12, 5]
-10000 -12000
on Left for dot[241, -241] vec [[7, 7],[-1993, -993]]
[-2000, -1000] [234, -248]
onCross[-2000, -1000] [234, -248]
496000 -234000
730000
onCross[-2000, -1000] [234, -248]
496000 -234000
730000
onCross[-2000, -1000] [234, -248]
496000 -234000
on Left for dot[241, -241] vec [[7, 7],[19, 12]]
[12, 5] [234, -248]
onCross[12, 5] [234, -248]
-2976 1170
-4146
onCross[12, 5] [234, -248]
-2976 1170
-4146
onCross[12, 5] [234, -248]
-2976 1170
onCross[222, -253] [-12, -5]
-1110 3036
check Inside Finished:1
1===
check Inside[[19, 12],[2019, 387]] [[19, 12],[7, 7]] [241, -241]
on Left for dot[7, 7] vec [[19, 12],[2019, 387]]
[2000, 375] [-12, -5]
onCross[2000, 375] [-12, -5]
-10000 -4500
-5500
onCross[2000, 375] [-12, -5]
-10000 -4500
-5500
onCross[2000, 375] [-12, -5]
-10000 -4500
on Left for dot[241, -241] vec [[19, 12],[7, 7]]
[-12, -5] [222, -253]
onCross[-12, -5] [222, -253]
3036 -1110
4146
onCross[-12, -5] [222, -253]
3036 -1110
4146
onCross[-12, -5] [222, -253]
3036 -1110
on Left for dot[241, -241] vec [[19, 12],[2019, 387]]
[2000, 375] [222, -253]
onCross[2000, 375] [222, -253]
-506000 83250
-589250
onCross[2000, 375] [222, -253]
-506000 83250
-589250
onCross[2000, 375] [222, -253]
-506000 83250
onCross[-1778, -628] [-2000, -375]
666750 1256000
check Inside Finished:1
1===
onCross[-2012, -1005] [-12, -5]
10060 12060
onCross[222, -253] [-12, -5]
-1110 3036
1===
check Inside[[7, 7],[-1993, -993]] [[7, 7],[19, 12]] [241, -241]
on Left for dot[19, 12] vec [[7, 7],[-1993, -993]]
[-2000, -1000] [12, 5]
onCross[-2000, -1000] [12, 5]
-10000 -12000
2000
onCross[-2000, -1000] [12, 5]
-10000 -12000
2000
onCross[-2000, -1000] [12, 5]
-10000 -12000
on Left for dot[241, -241] vec [[7, 7],[-1993, -993]]
[-2000, -1000] [234, -248]
onCross[-2000, -1000] [234, -248]
496000 -234000
730000
onCross[-2000, -1000] [234, -248]
496000 -234000
730000
onCross[-2000, -1000] [234, -248]
496000 -234000
on Left for dot[241, -241] vec [[7, 7],[19, 12]]
[12, 5] [234, -248]
onCross[12, 5] [234, -248]
-2976 1170
-4146
onCross[12, 5] [234, -248]
-2976 1170
-4146
onCross[12, 5] [234, -248]
-2976 1170
onCross[222, -253] [-12, -5]
-1110 3036
check Inside Finished:1
check Inside[[19, 12],[2019, 387]] [[19, 12],[7, 7]] [241, -241]
on Left for dot[7, 7] vec [[19, 12],[2019, 387]]
[2000, 375] [-12, -5]
onCross[2000, 375] [-12, -5]
-10000 -4500
-5500
onCross[2000, 375] [-12, -5]
-10000 -4500
-5500
onCross[2000, 375] [-12, -5]
-10000 -4500
on Left for dot[241, -241] vec [[19, 12],[7, 7]]
[-12, -5] [222, -253]
onCross[-12, -5] [222, -253]
3036 -1110
4146
onCross[-12, -5] [222, -253]
3036 -1110
4146
onCross[-12, -5] [222, -253]
3036 -1110
on Left for dot[241, -241] vec [[19, 12],[2019, 387]]
[2000, 375] [222, -253]
onCross[2000, 375] [222, -253]
-506000 83250
-589250
onCross[2000, 375] [222, -253]
-506000 83250
-589250
onCross[2000, 375] [222, -253]
-506000 83250
onCross[-1778, -628] [-2000, -375]
666750 1256000
check Inside Finished:1
onCross[-2012, -1005] [-12, -5]
10060 12060
onCross[222, -253] [-12, -5]
-1110 3036
onIfAvil:[[7, 7],[-1993, -993]] [[19, 12],[2019, 387]] on [-241, -241]
check Inside[[7, 7],[-1993, -993]] [[7, 7],[19, 12]] [-241, -241]
on Left for dot[19, 12] vec [[7, 7],[-1993, -993]]
[-2000, -1000] [12, 5]
onCross[-2000, -1000] [12, 5]
-10000 -12000
2000
onCross[-2000, -1000] [12, 5]
-10000 -12000
2000
onCross[-2000, -1000] [12, 5]
-10000 -12000
on Left for dot[-241, -241] vec [[7, 7],[-1993, -993]]
[-2000, -1000] [-248, -248]
onCross[-2000, -1000] [-248, -248]
496000 248000
248000
onCross[-2000, -1000] [-248, -248]
496000 248000
248000
onCross[-2000, -1000] [-248, -248]
496000 248000
on Left for dot[-241, -241] vec [[7, 7],[19, 12]]
[12, 5] [-248, -248]
onCross[12, 5] [-248, -248]
-2976 -1240
-1736
onCross[12, 5] [-248, -248]
-2976 -1240
-1736
onCross[12, 5] [-248, -248]
-2976 -1240
onCross[-260, -253] [-12, -5]
1300 3036
check Inside Finished:1
1===
check Inside[[19, 12],[2019, 387]] [[19, 12],[7, 7]] [-241, -241]
on Left for dot[7, 7] vec [[19, 12],[2019, 387]]
[2000, 375] [-12, -5]
onCross[2000, 375] [-12, -5]
-10000 -4500
-5500
onCross[2000, 375] [-12, -5]
-10000 -4500
-5500
onCross[2000, 375] [-12, -5]
-10000 -4500
on Left for dot[-241, -241] vec [[19, 12],[7, 7]]
[-12, -5] [-260, -253]
onCross[-12, -5] [-260, -253]
3036 1300
1736
onCross[-12, -5] [-260, -253]
3036 1300
1736
onCross[-12, -5] [-260, -253]
3036 1300
on Left for dot[-241, -241] vec [[19, 12],[2019, 387]]
[2000, 375] [-260, -253]
onCross[2000, 375] [-260, -253]
-506000 -97500
-408500
onCross[2000, 375] [-260, -253]
-506000 -97500
-408500
onCross[2000, 375] [-260, -253]
-506000 -97500
onCross[-2260, -628] [-2000, -375]
847500 1256000
check Inside Finished:1
1===
onCross[-2012, -1005] [-12, -5]
10060 12060
onCross[-260, -253] [-12, -5]
1300 3036
1===
check Inside[[7, 7],[-1993, -993]] [[7, 7],[19, 12]] [-241, -241]
on Left for dot[19, 12] vec [[7, 7],[-1993, -993]]
[-2000, -1000] [12, 5]
onCross[-2000, -1000] [12, 5]
-10000 -12000
2000
onCross[-2000, -1000] [12, 5]
-10000 -12000
2000
onCross[-2000, -1000] [12, 5]
-10000 -12000
on Left for dot[-241, -241] vec [[7, 7],[-1993, -993]]
[-2000, -1000] [-248, -248]
onCross[-2000, -1000] [-248, -248]
496000 248000
248000
onCross[-2000, -1000] [-248, -248]
496000 248000
248000
onCross[-2000, -1000] [-248, -248]
496000 248000
on Left for dot[-241, -241] vec [[7, 7],[19, 12]]
[12, 5] [-248, -248]
onCross[12, 5] [-248, -248]
-2976 -1240
-1736
onCross[12, 5] [-248, -248]
-2976 -1240
-1736
onCross[12, 5] [-248, -248]
-2976 -1240
onCross[-260, -253] [-12, -5]
1300 3036
check Inside Finished:1
check Inside[[19, 12],[2019, 387]] [[19, 12],[7, 7]] [-241, -241]
on Left for dot[7, 7] vec [[19, 12],[2019, 387]]
[2000, 375] [-12, -5]
onCross[2000, 375] [-12, -5]
-10000 -4500
-5500
onCross[2000, 375] [-12, -5]
-10000 -4500
-5500
onCross[2000, 375] [-12, -5]
-10000 -4500
on Left for dot[-241, -241] vec [[19, 12],[7, 7]]
[-12, -5] [-260, -253]
onCross[-12, -5] [-260, -253]
3036 1300
1736
onCross[-12, -5] [-260, -253]
3036 1300
1736
onCross[-12, -5] [-260, -253]
3036 1300
on Left for dot[-241, -241] vec [[19, 12],[2019, 387]]
[2000, 375] [-260, -253]
onCross[2000, 375] [-260, -253]
-506000 -97500
-408500
onCross[2000, 375] [-260, -253]
-506000 -97500
-408500
onCross[2000, 375] [-260, -253]
-506000 -97500
onCross[-2260, -628] [-2000, -375]
847500 1256000
check Inside Finished:1
onCross[-2012, -1005] [-12, -5]
10060 12060
onCross[-260, -253] [-12, -5]
1300 3036
onCross[-2000, -1000] [0, 482]
-964000 0
onCross[-248, -248] [-248, 234]
-58032 61504
onCross[1752, 752] [1752, 1234]
2161968 1317504
onCross[248, 248] [-1752, -752]
-186496 -434496
onCross[248, -234] [-1752, -1234]
-306032 409968
onCross[0, 482] [2000, 1000]
0 964000
onCross[0, 482] [248, 248]
0 119536
onCross[2000, 375] [482, 0]
0 180750
onCross[-260, 229] [222, 229]
-59540 50838
onCross[-2260, -146] [-1778, -146]
329960 259588
onCross[260, -229] [2260, 146]
37960 -517540
onCross[-222, -229] [1778, 146]
-32412 -407162
onCross[2000, 375] [0, -482]
-964000 0
onCross[222, 229] [222, -253]
-56166 50838
onCross[-1778, -146] [-1778, -628]
1116584 259588
onCross[-222, -229] [1778, 146]
-32412 -407162
onCross[-222, 253] [1778, 628]
-139416 449834
onCross[0, -482] [-2000, -375]
0 964000
onCross[0, -482] [-222, -229]
0 107004
onCross[-2000, -1000] [-482, 0]
0 482000
onCross[234, -248] [-248, -248]
-58032 61504
onCross[2234, 752] [1752, 752]
1679968 1317504
onCross[-234, 248] [-2234, -752]
175968 -554032
onCross[248, 248] [-1752, -752]
-186496 -434496
convexBuilt:

[241, -241]
[-241, -241]
[-241, -117]
[241, (429/8)]
[7, 7]
[19, 12]


for convexInt:[[15, 0],[1, 6]]
caliper:
[-241, -241] 
[-241, -117] 
[7, 7] 
[19, 12] 
[241, (429/8)] 
[241, -241] 


exted:[[-1999, (6042/7)],[2015, (-6000/7)]]

onCross[4014, (-12042/7)] [0, 124]
497736 0
onCross[1758, (-7729/7)] [1758, (-6861/7)]
(-12061638/7) (-13587582/7)
onCross[-2256, (4313/7)] [-2256, (5181/7)]
(-11688336/7) (-9730128/7)
onCross[-1758, (7729/7)] [2256, (-4313/7)]
(7582254/7) (17436624/7)
onCross[-1758, (6861/7)] [2256, (-5181/7)]
(9108198/7) (15478416/7)
onCross[4014, (-12042/7)] [248, 124]
497736 (-2986416/7)
onCross[1758, (-6861/7)] [2006, (-5993/7)]
(-10535694/7) (-13763166/7)
onCross[-2256, (5181/7)] [-2008, (6049/7)]
(-13646544/7) (-10403448/7)
onCross[-1758, (6861/7)] [2256, (-5181/7)]
(9108198/7) (15478416/7)
onCross[-2006, (5993/7)] [2008, (-6049/7)]
(12134294/7) (12033944/7)
onCross[248, 124] [-4014, (12042/7)]
(2986416/7) -497736
onCross[248, 124] [-1758, (6861/7)]
(1701528/7) -217992
onCross[4014, (-12042/7)] [12, 5]
20070 (-144504/7)
onCross[2006, (-5993/7)] [2018, (-5958/7)]
(-11951748/7) (-12093874/7)
onCross[-2008, (6049/7)] [-1996, (6084/7)]
(-12216672/7) (-12073804/7)
onCross[-2006, (5993/7)] [2008, (-6049/7)]
(12134294/7) (12033944/7)
onCross[-2018, (5958/7)] [1996, (-6084/7)]
(12277512/7) (11892168/7)
onCross[4014, (-12042/7)] [222, (333/8)]
(668331/4) (-2673324/7)
onCross[2018, (-5958/7)] [2240, (-45333/56)]
(-45740997/28) -1906560
onCross[-1996, (6084/7)] [-1774, (51003/56)]
(-25450497/14) (-10793016/7)
onCross[-2018, (5958/7)] [1996, (-6084/7)]
(12277512/7) (11892168/7)
onCross[-2240, (45333/56)] [1774, (-51003/56)]
2040120 (40210371/28)
onCross[4014, (-12042/7)] [0, (-2357/8)]
(-4730499/4) 0
onCross[2240, (-45333/56)] [2240, (-7729/7)]
-2473280 -1813320
onCross[-1774, (51003/56)] [-1774, (4313/7)]
(-7651262/7) (-45239661/28)
onCross[-2240, (45333/56)] [1774, (-51003/56)]
2040120 (40210371/28)
onCross[-2240, (7729/7)] [1774, (-4313/7)]
1380160 (13711246/7)
onCross[0, (-2357/8)] [-4014, (12042/7)]
0 (4730499/4)
onCross[0, (-2357/8)] [-2240, (45333/56)]
0 659960
onCross[4014, (-12042/7)] [-482, 0]
0 (5804244/7)
onCross[2240, (-7729/7)] [1758, (-7729/7)]
-2473280 (-13587582/7)
onCross[-1774, (4313/7)] [-2256, (4313/7)]
(-7651262/7) (-9730128/7)
onCross[-2240, (7729/7)] [1774, (-4313/7)]
1380160 (13711246/7)
onCross[-1758, (7729/7)] [2256, (-4313/7)]
(7582254/7) (17436624/7)
4

[(41/13), (66/13)] 
[(41/13), (66/13)] 
[241, (-678/7)] 
[241, (-678/7)] 


2

[(41/13), (66/13)] 
[241, (-678/7)] 


onCacuParm
tvec[(-154/13), (66/13)]
-14 6
onCacuParm
tvec[226, (-678/7)]
-14 6
onBuIv[(-113/7),(11/13)]
for addUnion
[(-113/7),(11/13)]
this:

addUnion Finished

avil:[(-113/7),(11/13)] 

for getConvex:[[19, 13],[19, 12]] [[3, 9],[7, 7]]

exted:[[19, 12],[19, -1988]] [[7, 7],[2007, -993]]

onCross[0, -2000] [2000, -1000]
0 -4000000
onCross[-12, -5] [1988, -1005]
12060 -9940
onCross[-12, 1995] [1988, 995]
-11940 3966060
onCross[12, 5] [12, -1995]
-23940 60
onCross[-1988, 1005] [-1988, -995]
1978060 -1997940
onCross[2000, -1000] [0, 2000]
4000000 0
onCross[2000, -1000] [12, 5]
10000 -12000
convexBuildFinish

for convexInt:[[15, 0],[1, 6]]
caliper:
[7, 7] 
[19, 12] 
[19, 1] 


exted:[[-1999, (6042/7)],[2015, (-6000/7)]]

onCross[4014, (-12042/7)] [12, 5]
20070 (-144504/7)
onCross[2006, (-5993/7)] [2018, (-5958/7)]
(-11951748/7) (-12093874/7)
onCross[-2008, (6049/7)] [-1996, (6084/7)]
(-12216672/7) (-12073804/7)
onCross[-2006, (5993/7)] [2008, (-6049/7)]
(12134294/7) (12033944/7)
onCross[-2018, (5958/7)] [1996, (-6084/7)]
(12277512/7) (11892168/7)
onCross[4014, (-12042/7)] [0, -11]
-44154 0
onCross[2018, (-5958/7)] [2018, (-6035/7)]
(-12178630/7) (-12023244/7)
onCross[-1996, (6084/7)] [-1996, (6007/7)]
(-11989972/7) (-12143664/7)
onCross[-2018, (5958/7)] [1996, (-6084/7)]
(12277512/7) (11892168/7)
onCross[-2018, (6035/7)] [1996, (-6007/7)]
(12122126/7) (12045860/7)
onCross[4014, (-12042/7)] [-12, 6]
24084 (144504/7)
onCross[2018, (-6035/7)] [2006, (-5993/7)]
(-12093874/7) (-12106210/7)
onCross[-1996, (6007/7)] [-2008, (6049/7)]
(-12073804/7) (-12062056/7)
onCross[-2018, (6035/7)] [1996, (-6007/7)]
(12122126/7) (12045860/7)
onCross[-2006, (5993/7)] [2008, (-6049/7)]
(12134294/7) (12033944/7)
0

onBuIv(0,0)
for addUnion
(0,0)
this:
[(-113/7),(11/13)]

onBuIv[(-113/7),(11/13)]
addUnion Finished

avil:[(-113/7),(11/13)] 

-> 计算不可行域 <-
onCross[-1997, (-16052/13)] [-2003, (-15974/13)]
(31900078/13) (32152156/13)
onCross[6, -6] [3, -2]
-12 -18
onCross[3, -2] [6, -6]
-18 -12
onCross[2003, (15974/13)] [6, -6]
-12018 (95844/13)
onCross[-1997, (-16052/13)] [-2000, (-16000/13)]
(31952000/13) (32104000/13)
onCross[-2003, (-15974/13)] [-2000, (-16000/13)]
(32048000/13) (31948000/13)
onCross[-1994, -2006] [-1997, -2002]
3991988 4005982
onCross[3, -4] [-3, 2]
6 12
onCross[-3, 2] [1997, 2002]
-6006 3994
onCross[-2000, -2000] [-1994, -2006]
4012000 3988000
onCross[-3, 2] [3, -4]
12 6
onCross[1997, 2002] [3, -4]
-7988 6006
onCross[-1994, -2006] [-2000, -2000]
3988000 4012000
onCross[-1997, -2002] [-2000, -2000]
3994000 4004000
Common for[[13, 19],[16, 17]]
for getConvex:[[19, 13],[16, 17]] [[3, 9],[13, 19]]

exted:[[16, 17],[-1484, 2017]] [[13, 19],[2013, 2019]]

onCross[-1500, 2000] [2000, 2000]
-3000000 4000000
onCross[-3, 2] [1997, 2002]
-6006 3994
onCross[1497, -1998] [3497, 2]
2994 -6987006
onCross[3, -2] [-1497, 1998]
5994 2994
onCross[-1997, -2002] [-3497, -2]
3994 7000994
onCross[2000, 2000] [1500, -2000]
-4000000 3000000
onCross[2000, 2000] [3, -2]
-4000 6000
convexBuildFinish

for convexInt:[[15, 0],[1, 6]]
caliper:
[13, 19] 
[(97/7), (139/7)] 
[16, 17] 


exted:[[-1999, (6042/7)],[2015, (-6000/7)]]

onCross[4014, (-12042/7)] [(6/7), (6/7)]
(24084/7) (-72252/49)
onCross[2012, (-5909/7)] [(14090/7), (-5903/7)]
(-11876836/7) (-83257810/49)
onCross[-2002, (6133/7)] [(-14008/7), 877]
-1755754 (-85911064/49)
onCross[-2012, (5909/7)] [2002, (-6133/7)]
(12339596/7) 1689974
onCross[(-14090/7), (5903/7)] [(14008/7), -877]
(12356930/7) (82689224/49)
onCross[4014, (-12042/7)] [(15/7), (-20/7)]
(-80280/7) (-180630/49)
onCross[(14090/7), (-5903/7)] [2015, (-5923/7)]
(-83455070/49) (-11894545/7)
onCross[(-14008/7), 877] [-1999, (6119/7)]
(-85714952/49) -1753123
onCross[(-14090/7), (5903/7)] [(14008/7), -877]
(12356930/7) (82689224/49)
onCross[-2015, (5923/7)] [1999, (-6119/7)]
(12329785/7) (11840077/7)
onCross[4014, (-12042/7)] [-3, 2]
8028 (36126/7)
onCross[2015, (-5923/7)] [2012, (-5909/7)]
(-11906635/7) (-11917076/7)
onCross[-1999, (6119/7)] [-2002, (6133/7)]
(-12259867/7) -1750034
onCross[-2015, (5923/7)] [1999, (-6119/7)]
(12329785/7) (11840077/7)
onCross[-2012, (5909/7)] [2002, (-6133/7)]
(12339596/7) 1689974
0

onBuIv(0,0)
for addUnion
(0,0)
this:

addUnion Finished

unvil:(0,0) 

for getConvex:[[19, 13],[13, 19]] [[3, 9],[16, 17]]

exted:[[13, 19],[-1987, 2019]] [[16, 17],[2016, (16221/13)]]

onIfAvil:[[13, 19],[-1987, 2019]] [[16, 17],[2016, (16221/13)]] on [241, 241]
check Inside[[13, 19],[-1987, 2019]] [[13, 19],[16, 17]] [241, 241]
on Left for dot[16, 17] vec [[13, 19],[-1987, 2019]]
[-2000, 2000] [3, -2]
onCross[-2000, 2000] [3, -2]
4000 6000
-2000
onCross[-2000, 2000] [3, -2]
4000 6000
-2000
onCross[-2000, 2000] [3, -2]
4000 6000
on Left for dot[241, 241] vec [[13, 19],[16, 17]]
[3, -2] [228, 222]
onCross[3, -2] [228, 222]
666 -456
1122
onCross[3, -2] [228, 222]
666 -456
1122
onCross[3, -2] [228, 222]
666 -456
on Left for dot[241, 241] vec [[13, 19],[-1987, 2019]]
[-2000, 2000] [228, 222]
onCross[-2000, 2000] [228, 222]
-444000 456000
-900000
onCross[-2000, 2000] [228, 222]
-444000 456000
-900000
onCross[-2000, 2000] [228, 222]
-444000 456000
onCross[2228, -1778] [2000, -2000]
-4456000 -3556000
check Inside Finished:1
1===
check Inside[[16, 17],[2016, (16221/13)]] [[16, 17],[13, 19]] [241, 241]
on Left for dot[13, 19] vec [[16, 17],[2016, (16221/13)]]
[2000, (16000/13)] [-3, 2]
onCross[2000, (16000/13)] [-3, 2]
4000 (-48000/13)
(100000/13)
onCross[2000, (16000/13)] [-3, 2]
4000 (-48000/13)
(100000/13)
onCross[2000, (16000/13)] [-3, 2]
4000 (-48000/13)
on Left for dot[241, 241] vec [[16, 17],[2016, (16221/13)]]
[2000, (16000/13)] [225, 224]
onCross[2000, (16000/13)] [225, 224]
448000 (3600000/13)
(2224000/13)
onCross[2000, (16000/13)] [225, 224]
448000 (3600000/13)
(2224000/13)
onCross[2000, (16000/13)] [225, 224]
448000 (3600000/13)
on Left for dot[241, 241] vec [[16, 17],[13, 19]]
[-3, 2] [225, 224]
onCross[-3, 2] [225, 224]
-672 450
-1122
onCross[-3, 2] [225, 224]
-672 450
-1122
onCross[-3, 2] [225, 224]
-672 450
onCross[228, 222] [3, -2]
-456 666
check Inside Finished:1
1===
onCross[-2003, 2002] [-3, 2]
-4006 -6006
onCross[225, 224] [-3, 2]
450 -672
1===
check Inside[[13, 19],[-1987, 2019]] [[13, 19],[16, 17]] [241, 241]
on Left for dot[16, 17] vec [[13, 19],[-1987, 2019]]
[-2000, 2000] [3, -2]
onCross[-2000, 2000] [3, -2]
4000 6000
-2000
onCross[-2000, 2000] [3, -2]
4000 6000
-2000
onCross[-2000, 2000] [3, -2]
4000 6000
on Left for dot[241, 241] vec [[13, 19],[16, 17]]
[3, -2] [228, 222]
onCross[3, -2] [228, 222]
666 -456
1122
onCross[3, -2] [228, 222]
666 -456
1122
onCross[3, -2] [228, 222]
666 -456
on Left for dot[241, 241] vec [[13, 19],[-1987, 2019]]
[-2000, 2000] [228, 222]
onCross[-2000, 2000] [228, 222]
-444000 456000
-900000
onCross[-2000, 2000] [228, 222]
-444000 456000
-900000
onCross[-2000, 2000] [228, 222]
-444000 456000
onCross[2228, -1778] [2000, -2000]
-4456000 -3556000
check Inside Finished:1
check Inside[[16, 17],[2016, (16221/13)]] [[16, 17],[13, 19]] [241, 241]
on Left for dot[13, 19] vec [[16, 17],[2016, (16221/13)]]
[2000, (16000/13)] [-3, 2]
onCross[2000, (16000/13)] [-3, 2]
4000 (-48000/13)
(100000/13)
onCross[2000, (16000/13)] [-3, 2]
4000 (-48000/13)
(100000/13)
onCross[2000, (16000/13)] [-3, 2]
4000 (-48000/13)
on Left for dot[241, 241] vec [[16, 17],[2016, (16221/13)]]
[2000, (16000/13)] [225, 224]
onCross[2000, (16000/13)] [225, 224]
448000 (3600000/13)
(2224000/13)
onCross[2000, (16000/13)] [225, 224]
448000 (3600000/13)
(2224000/13)
onCross[2000, (16000/13)] [225, 224]
448000 (3600000/13)
on Left for dot[241, 241] vec [[16, 17],[13, 19]]
[-3, 2] [225, 224]
onCross[-3, 2] [225, 224]
-672 450
-1122
onCross[-3, 2] [225, 224]
-672 450
-1122
onCross[-3, 2] [225, 224]
-672 450
onCross[228, 222] [3, -2]
-456 666
check Inside Finished:1
onCross[-2003, 2002] [-3, 2]
-4006 -6006
onCross[225, 224] [-3, 2]
450 -672
onIfAvil:[[13, 19],[-1987, 2019]] [[16, 17],[2016, (16221/13)]] on [-241, 241]
check Inside[[13, 19],[-1987, 2019]] [[13, 19],[16, 17]] [-241, 241]
on Left for dot[16, 17] vec [[13, 19],[-1987, 2019]]
[-2000, 2000] [3, -2]
onCross[-2000, 2000] [3, -2]
4000 6000
-2000
onCross[-2000, 2000] [3, -2]
4000 6000
-2000
onCross[-2000, 2000] [3, -2]
4000 6000
on Left for dot[-241, 241] vec [[13, 19],[16, 17]]
[3, -2] [-254, 222]
onCross[3, -2] [-254, 222]
666 508
158
onCross[3, -2] [-254, 222]
666 508
158
onCross[3, -2] [-254, 222]
666 508
on Left for dot[-241, 241] vec [[13, 19],[-1987, 2019]]
[-2000, 2000] [-254, 222]
onCross[-2000, 2000] [-254, 222]
-444000 -508000
64000
onCross[-2000, 2000] [-254, 222]
-444000 -508000
64000
onCross[-2000, 2000] [-254, 222]
-444000 -508000
check Inside Finished:0
0===
check Inside[[16, 17],[2016, (16221/13)]] [[16, 17],[13, 19]] [-241, 241]
on Left for dot[13, 19] vec [[16, 17],[2016, (16221/13)]]
[2000, (16000/13)] [-3, 2]
onCross[2000, (16000/13)] [-3, 2]
4000 (-48000/13)
(100000/13)
onCross[2000, (16000/13)] [-3, 2]
4000 (-48000/13)
(100000/13)
onCross[2000, (16000/13)] [-3, 2]
4000 (-48000/13)
on Left for dot[-241, 241] vec [[16, 17],[2016, (16221/13)]]
[2000, (16000/13)] [-257, 224]
onCross[2000, (16000/13)] [-257, 224]
448000 (-4112000/13)
(9936000/13)
onCross[2000, (16000/13)] [-257, 224]
448000 (-4112000/13)
(9936000/13)
onCross[2000, (16000/13)] [-257, 224]
448000 (-4112000/13)
on Left for dot[-241, 241] vec [[16, 17],[13, 19]]
[-3, 2] [-257, 224]
onCross[-3, 2] [-257, 224]
-672 -514
-158
onCross[-3, 2] [-257, 224]
-672 -514
-158
onCross[-3, 2] [-257, 224]
-672 -514
onCross[-254, 222] [3, -2]
508 666
check Inside Finished:1
1===
onCross[-2003, 2002] [-3, 2]
-4006 -6006
onCross[-257, 224] [-3, 2]
-514 -672
1===
check Inside[[13, 19],[-1987, 2019]] [[13, 19],[16, 17]] [-241, 241]
on Left for dot[16, 17] vec [[13, 19],[-1987, 2019]]
[-2000, 2000] [3, -2]
onCross[-2000, 2000] [3, -2]
4000 6000
-2000
onCross[-2000, 2000] [3, -2]
4000 6000
-2000
onCross[-2000, 2000] [3, -2]
4000 6000
on Left for dot[-241, 241] vec [[13, 19],[16, 17]]
[3, -2] [-254, 222]
onCross[3, -2] [-254, 222]
666 508
158
onCross[3, -2] [-254, 222]
666 508
158
onCross[3, -2] [-254, 222]
666 508
on Left for dot[-241, 241] vec [[13, 19],[-1987, 2019]]
[-2000, 2000] [-254, 222]
onCross[-2000, 2000] [-254, 222]
-444000 -508000
64000
onCross[-2000, 2000] [-254, 222]
-444000 -508000
64000
onCross[-2000, 2000] [-254, 222]
-444000 -508000
check Inside Finished:0
onIfAvil:[[13, 19],[-1987, 2019]] [[16, 17],[2016, (16221/13)]] on [241, -241]
check Inside[[13, 19],[-1987, 2019]] [[13, 19],[16, 17]] [241, -241]
on Left for dot[16, 17] vec [[13, 19],[-1987, 2019]]
[-2000, 2000] [3, -2]
onCross[-2000, 2000] [3, -2]
4000 6000
-2000
onCross[-2000, 2000] [3, -2]
4000 6000
-2000
onCross[-2000, 2000] [3, -2]
4000 6000
on Left for dot[241, -241] vec [[13, 19],[16, 17]]
[3, -2] [228, -260]
onCross[3, -2] [228, -260]
-780 -456
-324
onCross[3, -2] [228, -260]
-780 -456
-324
onCross[3, -2] [228, -260]
-780 -456
check Inside Finished:0
0===
check Inside[[16, 17],[2016, (16221/13)]] [[16, 17],[13, 19]] [241, -241]
on Left for dot[13, 19] vec [[16, 17],[2016, (16221/13)]]
[2000, (16000/13)] [-3, 2]
onCross[2000, (16000/13)] [-3, 2]
4000 (-48000/13)
(100000/13)
onCross[2000, (16000/13)] [-3, 2]
4000 (-48000/13)
(100000/13)
onCross[2000, (16000/13)] [-3, 2]
4000 (-48000/13)
on Left for dot[241, -241] vec [[16, 17],[2016, (16221/13)]]
[2000, (16000/13)] [225, -258]
onCross[2000, (16000/13)] [225, -258]
-516000 (3600000/13)
(-10308000/13)
onCross[2000, (16000/13)] [225, -258]
-516000 (3600000/13)
(-10308000/13)
onCross[2000, (16000/13)] [225, -258]
-516000 (3600000/13)
check Inside Finished:0
0===
onCross[-2003, 2002] [-3, 2]
-4006 -6006
onCross[225, -258] [-3, 2]
450 774
0===
check Inside[[13, 19],[-1987, 2019]] [[13, 19],[16, 17]] [241, -241]
on Left for dot[16, 17] vec [[13, 19],[-1987, 2019]]
[-2000, 2000] [3, -2]
onCross[-2000, 2000] [3, -2]
4000 6000
-2000
onCross[-2000, 2000] [3, -2]
4000 6000
-2000
onCross[-2000, 2000] [3, -2]
4000 6000
on Left for dot[241, -241] vec [[13, 19],[16, 17]]
[3, -2] [228, -260]
onCross[3, -2] [228, -260]
-780 -456
-324
onCross[3, -2] [228, -260]
-780 -456
-324
onCross[3, -2] [228, -260]
-780 -456
check Inside Finished:0
onIfAvil:[[13, 19],[-1987, 2019]] [[16, 17],[2016, (16221/13)]] on [-241, -241]
check Inside[[13, 19],[-1987, 2019]] [[13, 19],[16, 17]] [-241, -241]
on Left for dot[16, 17] vec [[13, 19],[-1987, 2019]]
[-2000, 2000] [3, -2]
onCross[-2000, 2000] [3, -2]
4000 6000
-2000
onCross[-2000, 2000] [3, -2]
4000 6000
-2000
onCross[-2000, 2000] [3, -2]
4000 6000
on Left for dot[-241, -241] vec [[13, 19],[16, 17]]
[3, -2] [-254, -260]
onCross[3, -2] [-254, -260]
-780 508
-1288
onCross[3, -2] [-254, -260]
-780 508
-1288
onCross[3, -2] [-254, -260]
-780 508
check Inside Finished:0
0===
check Inside[[16, 17],[2016, (16221/13)]] [[16, 17],[13, 19]] [-241, -241]
on Left for dot[13, 19] vec [[16, 17],[2016, (16221/13)]]
[2000, (16000/13)] [-3, 2]
onCross[2000, (16000/13)] [-3, 2]
4000 (-48000/13)
(100000/13)
onCross[2000, (16000/13)] [-3, 2]
4000 (-48000/13)
(100000/13)
onCross[2000, (16000/13)] [-3, 2]
4000 (-48000/13)
on Left for dot[-241, -241] vec [[16, 17],[2016, (16221/13)]]
[2000, (16000/13)] [-257, -258]
onCross[2000, (16000/13)] [-257, -258]
-516000 (-4112000/13)
(-2596000/13)
onCross[2000, (16000/13)] [-257, -258]
-516000 (-4112000/13)
(-2596000/13)
onCross[2000, (16000/13)] [-257, -258]
-516000 (-4112000/13)
check Inside Finished:0
0===
onCross[-2003, 2002] [-3, 2]
-4006 -6006
onCross[-257, -258] [-3, 2]
-514 774
0===
check Inside[[13, 19],[-1987, 2019]] [[13, 19],[16, 17]] [-241, -241]
on Left for dot[16, 17] vec [[13, 19],[-1987, 2019]]
[-2000, 2000] [3, -2]
onCross[-2000, 2000] [3, -2]
4000 6000
-2000
onCross[-2000, 2000] [3, -2]
4000 6000
-2000
onCross[-2000, 2000] [3, -2]
4000 6000
on Left for dot[-241, -241] vec [[13, 19],[16, 17]]
[3, -2] [-254, -260]
onCross[3, -2] [-254, -260]
-780 508
-1288
onCross[3, -2] [-254, -260]
-780 508
-1288
onCross[3, -2] [-254, -260]
-780 508
check Inside Finished:0
onCross[-2000, 2000] [0, 482]
-964000 0
onCross[-254, -260] [-254, 222]
-56388 66040
onCross[1746, -2260] [1746, -1778]
-3104388 -3945960
onCross[254, 260] [-1746, 2260]
574040 -453960
onCross[254, -222] [-1746, 1778]
451612 387612
onCross[-2000, 2000] [482, 0]
0 964000
onCross[-254, 222] [228, 222]
-56388 50616
onCross[1746, -1778] [2228, -1778]
-3104388 -3961384
onCross[254, -222] [-1746, 1778]
451612 387612
onCross[-228, -222] [-2228, 1778]
-405384 494616
onCross[482, 0] [2000, -2000]
-964000 0
onCross[482, 0] [254, -222]
-107004 0
onCross[2000, (16000/13)] [482, 0]
0 (7712000/13)
onCross[-257, 224] [225, 224]
-57568 50400
onCross[-2257, (-13088/13)] [-1775, (-13088/13)]
(29539616/13) (23231200/13)
onCross[257, -224] [2257, (13088/13)]
(3363616/13) -505568
onCross[-225, -224] [1775, (13088/13)]
(-2944800/13) -397600
onCross[2000, (16000/13)] [0, -482]
-964000 0
onCross[225, 224] [225, -258]
-58050 50400
onCross[-1775, (-13088/13)] [-1775, (-19354/13)]
(34353350/13) (23231200/13)
onCross[-225, -224] [1775, (13088/13)]
(-2944800/13) -397600
onCross[-225, 258] [1775, (19354/13)]
(-4354650/13) 457950
onCross[0, -482] [-2000, (-16000/13)]
0 964000
onCross[0, -482] [-225, -224]
0 108450
convexBuilt:

[241, 241]
[-209, 241]
[241, (2021/13)]
[13, 19]
[16, 17]


for convexInt:[[15, 0],[1, 6]]
caliper:
[-209, 241] 
[241, 241] 
[241, (2021/13)] 
[16, 17] 
[13, 19] 


exted:[[-1999, (6042/7)],[2015, (-6000/7)]]

onCross[4014, (-12042/7)] [450, 0]
0 (-5418900/7)
onCross[1790, (-4355/7)] [2240, (-4355/7)]
(-7795450/7) -1393600
onCross[-2224, (7687/7)] [-1774, (7687/7)]
(-17095888/7) (-13636738/7)
onCross[-1790, (4355/7)] [2224, (-7687/7)]
(13759730/7) (9685520/7)
onCross[-2240, (4355/7)] [1774, (-7687/7)]
2459840 (7725770/7)
onCross[4014, (-12042/7)] [0, (-1112/13)]
(-4463568/13) 0
onCross[2240, (-4355/7)] [2240, (-64399/91)]
(-20607680/13) -1393600
onCross[-1774, (7687/7)] [-1774, (92147/91)]
(-163468778/91) (-13636738/7)
onCross[-2240, (4355/7)] [1774, (-7687/7)]
2459840 (7725770/7)
onCross[-2240, (64399/91)] [1774, (-92147/91)]
(29487040/13) (114243826/91)
onCross[4014, (-12042/7)] [-225, (-1800/13)]
(-7225200/13) (2709450/7)
onCross[2240, (-64399/91)] [2015, (-5923/7)]
-1895360 (-9981845/7)
onCross[-1774, (92147/91)] [-1999, (6119/7)]
(-10855106/7) (-184201853/91)
onCross[-2240, (64399/91)] [1774, (-92147/91)]
(29487040/13) (114243826/91)
onCross[-2015, (5923/7)] [1999, (-6119/7)]
(12329785/7) (11840077/7)
onCross[4014, (-12042/7)] [-3, 2]
8028 (36126/7)
onCross[2015, (-5923/7)] [2012, (-5909/7)]
(-11906635/7) (-11917076/7)
onCross[-1999, (6119/7)] [-2002, (6133/7)]
(-12259867/7) -1750034
onCross[-2015, (5923/7)] [1999, (-6119/7)]
(12329785/7) (11840077/7)
onCross[-2012, (5909/7)] [2002, (-6133/7)]
(12339596/7) 1689974
onCross[4014, (-12042/7)] [-222, 222]
891108 (2673324/7)
onCross[2012, (-5909/7)] [1790, (-4355/7)]
(-8762260/7) (-10577110/7)
onCross[-2002, (6133/7)] [-2224, (7687/7)]
-2198482 (-13639792/7)
onCross[-2012, (5909/7)] [2002, (-6133/7)]
(12339596/7) 1689974
onCross[-1790, (4355/7)] [2224, (-7687/7)]
(13759730/7) (9685520/7)
0

onBuIv(0,0)
for addIntersection(0,0)
this:
(0,0)

onBuIv(0,0)
onBuIv(0,0)
addIntersection Finished

unvil:

onCross[-1797, -2005] [-1803, -1998]
3590406 3615015
onCross[6, -7] [3, -2]
-12 -21
onCross[3, -2] [6, -7]
-21 -12
onCross[1803, 1998] [6, -7]
-12621 11988
onCross[-1797, -2005] [-1800, -2000]
3594000 3609000
onCross[-1803, -1998] [-1800, -2000]
3606000 3596400
onCross[-994, -2007] [-997, -2002]
1989988 2000979
onCross[3, -5] [-3, 2]
6 15
onCross[-3, 2] [997, 2002]
-6006 1994
onCross[-1000, -2000] [-994, -2007]
2007000 1988000
onCross[-3, 2] [3, -5]
15 6
onCross[997, 2002] [3, -5]
-4985 6006
onCross[-994, -2007] [-1000, -2000]
1988000 2007000
onCross[-997, -2002] [-1000, -2000]
1994000 2002000
Common for[[13, 19],[16, 17]]
for getConvex:[[19, 12],[16, 17]] [[7, 7],[13, 19]]

exted:[[16, 17],[-1184, 2017]] [[13, 19],[1013, 2019]]

onCross[-1200, 2000] [1000, 2000]
-2400000 2000000
onCross[-3, 2] [997, 2002]
-6006 1994
onCross[1197, -1998] [2197, 2]
2394 -4389606
onCross[3, -2] [-1197, 1998]
5994 2394
onCross[-997, -2002] [-2197, -2]
1994 4398394
onCross[1000, 2000] [1200, -2000]
-2000000 2400000
onCross[1000, 2000] [3, -2]
-2000 6000
convexBuildFinish

for convexInt:[[15, 0],[1, 6]]
caliper:
[13, 19] 
[(152/11), (227/11)] 
[16, 17] 


exted:[[-1999, (6042/7)],[2015, (-6000/7)]]

onCross[4014, (-12042/7)] [(9/11), (18/11)]
(72252/11) (-108378/77)
onCross[2012, (-5909/7)] [(22141/11), (-64873/77)]
(-130524476/77) (-18690167/11)
onCross[-2002, (6133/7)] [(-22013/11), (67589/77)]
-1757314 (-135005729/77)
onCross[-2012, (5909/7)] [2002, (-6133/7)]
(12339596/7) 1689974
onCross[(-22141/11), (64873/77)] [(22013/11), (-67589/77)]
(213784007/121) (1428049349/847)
onCross[4014, (-12042/7)] [(24/11), (-40/11)]
(-160560/11) (-289008/77)
onCross[(22141/11), (-64873/77)] [2015, (-5923/7)]
(-18734449/11) (-130719095/77)
onCross[(-22013/11), (67589/77)] [-1999, (6119/7)]
(-134697547/77) (-135110411/77)
onCross[(-22141/11), (64873/77)] [(22013/11), (-67589/77)]
(213784007/121) (1428049349/847)
onCross[-2015, (5923/7)] [1999, (-6119/7)]
(12329785/7) (11840077/7)
onCross[4014, (-12042/7)] [-3, 2]
8028 (36126/7)
onCross[2015, (-5923/7)] [2012, (-5909/7)]
(-11906635/7) (-11917076/7)
onCross[-1999, (6119/7)] [-2002, (6133/7)]
(-12259867/7) -1750034
onCross[-2015, (5923/7)] [1999, (-6119/7)]
(12329785/7) (11840077/7)
onCross[-2012, (5909/7)] [2002, (-6133/7)]
(12339596/7) 1689974
0

onBuIv(0,0)
for addUnion
(0,0)
this:

addUnion Finished

unvil:(0,0) 

for getConvex:[[19, 12],[13, 19]] [[7, 7],[16, 17]]

exted:[[13, 19],[(-11909/7), 2019]] [[16, 17],[1816, 2017]]

onIfAvil:[[13, 19],[(-11909/7), 2019]] [[16, 17],[1816, 2017]] on [241, 241]
check Inside[[13, 19],[(-11909/7), 2019]] [[13, 19],[16, 17]] [241, 241]
on Left for dot[16, 17] vec [[13, 19],[(-11909/7), 2019]]
[(-12000/7), 2000] [3, -2]
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
(-18000/7)
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
(-18000/7)
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
on Left for dot[241, 241] vec [[13, 19],[16, 17]]
[3, -2] [228, 222]
onCross[3, -2] [228, 222]
666 -456
1122
onCross[3, -2] [228, 222]
666 -456
1122
onCross[3, -2] [228, 222]
666 -456
on Left for dot[241, 241] vec [[13, 19],[(-11909/7), 2019]]
[(-12000/7), 2000] [228, 222]
onCross[(-12000/7), 2000] [228, 222]
(-2664000/7) 456000
(-5856000/7)
onCross[(-12000/7), 2000] [228, 222]
(-2664000/7) 456000
(-5856000/7)
onCross[(-12000/7), 2000] [228, 222]
(-2664000/7) 456000
onCross[(13596/7), -1778] [(12000/7), -2000]
(-27192000/7) -3048000
check Inside Finished:1
1===
check Inside[[16, 17],[1816, 2017]] [[16, 17],[13, 19]] [241, 241]
on Left for dot[13, 19] vec [[16, 17],[1816, 2017]]
[1800, 2000] [-3, 2]
onCross[1800, 2000] [-3, 2]
3600 -6000
9600
onCross[1800, 2000] [-3, 2]
3600 -6000
9600
onCross[1800, 2000] [-3, 2]
3600 -6000
on Left for dot[241, 241] vec [[16, 17],[1816, 2017]]
[1800, 2000] [225, 224]
onCross[1800, 2000] [225, 224]
403200 450000
-46800
onCross[1800, 2000] [225, 224]
403200 450000
-46800
onCross[1800, 2000] [225, 224]
403200 450000
check Inside Finished:0
0===
onCross[(-12021/7), 2002] [-3, 2]
(-24042/7) -6006
onCross[225, 224] [-3, 2]
450 -672
1===
check Inside[[13, 19],[(-11909/7), 2019]] [[13, 19],[16, 17]] [241, 241]
on Left for dot[16, 17] vec [[13, 19],[(-11909/7), 2019]]
[(-12000/7), 2000] [3, -2]
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
(-18000/7)
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
(-18000/7)
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
on Left for dot[241, 241] vec [[13, 19],[16, 17]]
[3, -2] [228, 222]
onCross[3, -2] [228, 222]
666 -456
1122
onCross[3, -2] [228, 222]
666 -456
1122
onCross[3, -2] [228, 222]
666 -456
on Left for dot[241, 241] vec [[13, 19],[(-11909/7), 2019]]
[(-12000/7), 2000] [228, 222]
onCross[(-12000/7), 2000] [228, 222]
(-2664000/7) 456000
(-5856000/7)
onCross[(-12000/7), 2000] [228, 222]
(-2664000/7) 456000
(-5856000/7)
onCross[(-12000/7), 2000] [228, 222]
(-2664000/7) 456000
onCross[(13596/7), -1778] [(12000/7), -2000]
(-27192000/7) -3048000
check Inside Finished:1
check Inside[[16, 17],[1816, 2017]] [[16, 17],[13, 19]] [241, 241]
on Left for dot[13, 19] vec [[16, 17],[1816, 2017]]
[1800, 2000] [-3, 2]
onCross[1800, 2000] [-3, 2]
3600 -6000
9600
onCross[1800, 2000] [-3, 2]
3600 -6000
9600
onCross[1800, 2000] [-3, 2]
3600 -6000
on Left for dot[241, 241] vec [[16, 17],[1816, 2017]]
[1800, 2000] [225, 224]
onCross[1800, 2000] [225, 224]
403200 450000
-46800
onCross[1800, 2000] [225, 224]
403200 450000
-46800
onCross[1800, 2000] [225, 224]
403200 450000
check Inside Finished:0
onIfAvil:[[13, 19],[(-11909/7), 2019]] [[16, 17],[1816, 2017]] on [-241, 241]
check Inside[[13, 19],[(-11909/7), 2019]] [[13, 19],[16, 17]] [-241, 241]
on Left for dot[16, 17] vec [[13, 19],[(-11909/7), 2019]]
[(-12000/7), 2000] [3, -2]
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
(-18000/7)
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
(-18000/7)
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
on Left for dot[-241, 241] vec [[13, 19],[16, 17]]
[3, -2] [-254, 222]
onCross[3, -2] [-254, 222]
666 508
158
onCross[3, -2] [-254, 222]
666 508
158
onCross[3, -2] [-254, 222]
666 508
on Left for dot[-241, 241] vec [[13, 19],[(-11909/7), 2019]]
[(-12000/7), 2000] [-254, 222]
onCross[(-12000/7), 2000] [-254, 222]
(-2664000/7) -508000
(892000/7)
onCross[(-12000/7), 2000] [-254, 222]
(-2664000/7) -508000
(892000/7)
onCross[(-12000/7), 2000] [-254, 222]
(-2664000/7) -508000
check Inside Finished:0
0===
check Inside[[16, 17],[1816, 2017]] [[16, 17],[13, 19]] [-241, 241]
on Left for dot[13, 19] vec [[16, 17],[1816, 2017]]
[1800, 2000] [-3, 2]
onCross[1800, 2000] [-3, 2]
3600 -6000
9600
onCross[1800, 2000] [-3, 2]
3600 -6000
9600
onCross[1800, 2000] [-3, 2]
3600 -6000
on Left for dot[-241, 241] vec [[16, 17],[1816, 2017]]
[1800, 2000] [-257, 224]
onCross[1800, 2000] [-257, 224]
403200 -514000
917200
onCross[1800, 2000] [-257, 224]
403200 -514000
917200
onCross[1800, 2000] [-257, 224]
403200 -514000
on Left for dot[-241, 241] vec [[16, 17],[13, 19]]
[-3, 2] [-257, 224]
onCross[-3, 2] [-257, 224]
-672 -514
-158
onCross[-3, 2] [-257, 224]
-672 -514
-158
onCross[-3, 2] [-257, 224]
-672 -514
onCross[-254, 222] [3, -2]
508 666
check Inside Finished:1
1===
onCross[(-12021/7), 2002] [-3, 2]
(-24042/7) -6006
onCross[-257, 224] [-3, 2]
-514 -672
1===
check Inside[[13, 19],[(-11909/7), 2019]] [[13, 19],[16, 17]] [-241, 241]
on Left for dot[16, 17] vec [[13, 19],[(-11909/7), 2019]]
[(-12000/7), 2000] [3, -2]
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
(-18000/7)
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
(-18000/7)
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
on Left for dot[-241, 241] vec [[13, 19],[16, 17]]
[3, -2] [-254, 222]
onCross[3, -2] [-254, 222]
666 508
158
onCross[3, -2] [-254, 222]
666 508
158
onCross[3, -2] [-254, 222]
666 508
on Left for dot[-241, 241] vec [[13, 19],[(-11909/7), 2019]]
[(-12000/7), 2000] [-254, 222]
onCross[(-12000/7), 2000] [-254, 222]
(-2664000/7) -508000
(892000/7)
onCross[(-12000/7), 2000] [-254, 222]
(-2664000/7) -508000
(892000/7)
onCross[(-12000/7), 2000] [-254, 222]
(-2664000/7) -508000
check Inside Finished:0
onIfAvil:[[13, 19],[(-11909/7), 2019]] [[16, 17],[1816, 2017]] on [241, -241]
check Inside[[13, 19],[(-11909/7), 2019]] [[13, 19],[16, 17]] [241, -241]
on Left for dot[16, 17] vec [[13, 19],[(-11909/7), 2019]]
[(-12000/7), 2000] [3, -2]
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
(-18000/7)
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
(-18000/7)
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
on Left for dot[241, -241] vec [[13, 19],[16, 17]]
[3, -2] [228, -260]
onCross[3, -2] [228, -260]
-780 -456
-324
onCross[3, -2] [228, -260]
-780 -456
-324
onCross[3, -2] [228, -260]
-780 -456
check Inside Finished:0
0===
check Inside[[16, 17],[1816, 2017]] [[16, 17],[13, 19]] [241, -241]
on Left for dot[13, 19] vec [[16, 17],[1816, 2017]]
[1800, 2000] [-3, 2]
onCross[1800, 2000] [-3, 2]
3600 -6000
9600
onCross[1800, 2000] [-3, 2]
3600 -6000
9600
onCross[1800, 2000] [-3, 2]
3600 -6000
on Left for dot[241, -241] vec [[16, 17],[1816, 2017]]
[1800, 2000] [225, -258]
onCross[1800, 2000] [225, -258]
-464400 450000
-914400
onCross[1800, 2000] [225, -258]
-464400 450000
-914400
onCross[1800, 2000] [225, -258]
-464400 450000
check Inside Finished:0
0===
onCross[(-12021/7), 2002] [-3, 2]
(-24042/7) -6006
onCross[225, -258] [-3, 2]
450 774
0===
check Inside[[13, 19],[(-11909/7), 2019]] [[13, 19],[16, 17]] [241, -241]
on Left for dot[16, 17] vec [[13, 19],[(-11909/7), 2019]]
[(-12000/7), 2000] [3, -2]
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
(-18000/7)
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
(-18000/7)
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
on Left for dot[241, -241] vec [[13, 19],[16, 17]]
[3, -2] [228, -260]
onCross[3, -2] [228, -260]
-780 -456
-324
onCross[3, -2] [228, -260]
-780 -456
-324
onCross[3, -2] [228, -260]
-780 -456
check Inside Finished:0
onIfAvil:[[13, 19],[(-11909/7), 2019]] [[16, 17],[1816, 2017]] on [-241, -241]
check Inside[[13, 19],[(-11909/7), 2019]] [[13, 19],[16, 17]] [-241, -241]
on Left for dot[16, 17] vec [[13, 19],[(-11909/7), 2019]]
[(-12000/7), 2000] [3, -2]
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
(-18000/7)
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
(-18000/7)
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
on Left for dot[-241, -241] vec [[13, 19],[16, 17]]
[3, -2] [-254, -260]
onCross[3, -2] [-254, -260]
-780 508
-1288
onCross[3, -2] [-254, -260]
-780 508
-1288
onCross[3, -2] [-254, -260]
-780 508
check Inside Finished:0
0===
check Inside[[16, 17],[1816, 2017]] [[16, 17],[13, 19]] [-241, -241]
on Left for dot[13, 19] vec [[16, 17],[1816, 2017]]
[1800, 2000] [-3, 2]
onCross[1800, 2000] [-3, 2]
3600 -6000
9600
onCross[1800, 2000] [-3, 2]
3600 -6000
9600
onCross[1800, 2000] [-3, 2]
3600 -6000
on Left for dot[-241, -241] vec [[16, 17],[1816, 2017]]
[1800, 2000] [-257, -258]
onCross[1800, 2000] [-257, -258]
-464400 -514000
49600
onCross[1800, 2000] [-257, -258]
-464400 -514000
49600
onCross[1800, 2000] [-257, -258]
-464400 -514000
on Left for dot[-241, -241] vec [[16, 17],[13, 19]]
[-3, 2] [-257, -258]
onCross[-3, 2] [-257, -258]
774 -514
1288
onCross[-3, 2] [-257, -258]
774 -514
1288
onCross[-3, 2] [-257, -258]
774 -514
check Inside Finished:0
0===
onCross[(-12021/7), 2002] [-3, 2]
(-24042/7) -6006
onCross[-257, -258] [-3, 2]
-514 774
0===
check Inside[[13, 19],[(-11909/7), 2019]] [[13, 19],[16, 17]] [-241, -241]
on Left for dot[16, 17] vec [[13, 19],[(-11909/7), 2019]]
[(-12000/7), 2000] [3, -2]
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
(-18000/7)
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
(-18000/7)
onCross[(-12000/7), 2000] [3, -2]
(24000/7) 6000
on Left for dot[-241, -241] vec [[13, 19],[16, 17]]
[3, -2] [-254, -260]
onCross[3, -2] [-254, -260]
-780 508
-1288
onCross[3, -2] [-254, -260]
-780 508
-1288
onCross[3, -2] [-254, -260]
-780 508
check Inside Finished:0
onCross[(-12000/7), 2000] [0, 482]
(-5784000/7) 0
onCross[-254, -260] [-254, 222]
-56388 66040
onCross[(10222/7), -2260] [(10222/7), -1778]
-2596388 (-23101720/7)
onCross[254, 260] [(-10222/7), 2260]
574040 (-2657720/7)
onCross[254, -222] [(-10222/7), 1778]
451612 (2269284/7)
onCross[(-12000/7), 2000] [482, 0]
0 964000
onCross[-254, 222] [228, 222]
-56388 50616
onCross[(10222/7), -1778] [(13596/7), -1778]
-2596388 -3453384
onCross[254, -222] [(-10222/7), 1778]
451612 (2269284/7)
onCross[-228, -222] [(-13596/7), 1778]
-405384 (3018312/7)
onCross[482, 0] [(12000/7), -2000]
-964000 0
onCross[482, 0] [254, -222]
-107004 0
onCross[1800, 2000] [482, 0]
0 964000
onCross[-257, 224] [225, 224]
-57568 50400
onCross[-2057, -1776] [-1575, -1776]
3653232 2797200
onCross[257, -224] [2057, 1776]
456432 -460768
onCross[-225, -224] [1575, 1776]
-399600 -352800
onCross[482, 0] [-1800, -2000]
-964000 0
onCross[482, 0] [257, -224]
-107968 0
onCross[1800, 2000] [0, -482]
-867600 0
onCross[225, 224] [225, -258]
-58050 50400
onCross[-1575, -1776] [-1575, -2258]
3556350 2797200
onCross[-225, -224] [1575, 1776]
-399600 -352800
onCross[-225, 258] [1575, 2258]
-508050 406350
convexBuilt:

[(-1241/7), 241]
[(1088/5), 241]
[13, 19]
[16, 17]


for convexInt:[[15, 0],[1, 6]]
caliper:
[(-1241/7), 241] 
[(1088/5), 241] 
[16, 17] 
[13, 19] 


exted:[[-1999, (6042/7)],[2015, (-6000/7)]]

onCross[4014, (-12042/7)] [(13821/35), 0]
0 (-166432482/245)
onCross[(12752/7), (-4355/7)] [(11083/5), (-4355/7)]
(-55534960/49) (-9653293/7)
onCross[(-15346/7), (7687/7)] [(-8987/5), (7687/7)]
(-117964702/49) (-69083069/35)
onCross[(-12752/7), (4355/7)] [(15346/7), (-7687/7)]
(98024624/49) (66831830/49)
onCross[(-11083/5), (4355/7)] [(8987/5), (-7687/7)]
(85195021/35) (7827677/7)
onCross[4014, (-12042/7)] [(-1008/5), -224]
-899136 (1734048/5)
onCross[(11083/5), (-4355/7)] [2015, (-5923/7)]
(-65644609/35) (-8775325/7)
onCross[(-8987/5), (7687/7)] [-1999, (6119/7)]
(-54991453/35) (-15366313/7)
onCross[(-11083/5), (4355/7)] [(8987/5), (-7687/7)]
(85195021/35) (7827677/7)
onCross[-2015, (5923/7)] [1999, (-6119/7)]
(12329785/7) (11840077/7)
onCross[4014, (-12042/7)] [-3, 2]
8028 (36126/7)
onCross[2015, (-5923/7)] [2012, (-5909/7)]
(-11906635/7) (-11917076/7)
onCross[-1999, (6119/7)] [-2002, (6133/7)]
(-12259867/7) -1750034
onCross[-2015, (5923/7)] [1999, (-6119/7)]
(12329785/7) (11840077/7)
onCross[-2012, (5909/7)] [2002, (-6133/7)]
(12339596/7) 1689974
onCross[4014, (-12042/7)] [(-1332/7), 222]
891108 (16039944/49)
onCross[2012, (-5909/7)] [(12752/7), (-4355/7)]
(-8762260/7) (-75351568/49)
onCross[-2002, (6133/7)] [(-15346/7), (7687/7)]
-2198482 (-94117018/49)
onCross[-2012, (5909/7)] [2002, (-6133/7)]
(12339596/7) 1689974
onCross[(-12752/7), (4355/7)] [(15346/7), (-7687/7)]
(98024624/49) (66831830/49)
0

onBuIv(0,0)
for addIntersection(0,0)
this:
(0,0)

onBuIv(0,0)
onBuIv(0,0)
addIntersection Finished

unvil:

onCacuParm
tvec[-14, 6]
-14 6
onCacuParm
tvec[0, 0]
-14 6
onBuIv[0,1]
tar:[0,1]
for addIntersection[0,1]
this:
[(-113/7),(11/13)]

onBuIv[0,(11/13)]
addIntersection Finished

for addIntersection[0,1]
this:

addIntersection Finished

for addIntersection[0,(11/13)]
this:

addIntersection Finished

finalCheck:
avil:[0,(11/13)] 

unvil:

0
Yes
